@use '@/styles/colors.scss' as c;

.wrapper {
  @apply relative w-full flex items-center rounded bg-white;

  &:not(.label-outside) {
    @apply pt-3;
  }

  .input {
    @apply leading-6 text-rui-text w-full bg-transparent py-1.5 pr-3 outline-0 outline-none transition-all placeholder:opacity-0 focus:placeholder:opacity-100;

    &:focus {
      @apply outline-0;
      + .label {
        @apply after:scale-x-100;
      }
    }

    &:not(:placeholder-shown),
    &:autofill,
    &:-webkit-autofill,
    &[data-has-value='true'],
    &:focus {
      + .label {
        @apply text-xs leading-tight;
        padding-left: var(--x-padding);
        padding-right: var(--x-padding);
      }
    }

    &:disabled {
      @apply border-dotted;

      &,
      + .label {
        @apply text-rui-text-disabled;
      }

      ~ .fieldset {
        @apply border-dotted;
      }
    }
  }

  .label {
    @apply left-0 text-base leading-[3.75] text-rui-text-secondary pointer-events-none absolute top-0 flex h-full w-full select-none transition-all duration-75 border-b border-black/[0.42];

    --x-padding: 0px;
    --prepend-width: v-bind(prependWidth);
    --append-width: v-bind(appendWidth);

    padding-left: calc(var(--x-padding) + var(--prepend-width, 0px));
    padding-right: calc(var(--x-padding) + var(--append-width, 0px));

    span {
      @apply truncate transition-all duration-75;
    }

    &:after {
      content: '';
      @apply absolute bottom-0 left-0 block w-full scale-x-0 border-b-2 mb-[-1px] transition-transform duration-300 border-black;
    }
  }

  &:hover .label {
    @apply border-black;
  }

  .icon {
    @apply text-black/[0.54];
  }

  .prepend:not(:empty) {
    @apply pr-2;
  }

  .append:not(:empty) {
    @apply pl-2;
  }

  @each $color in c.$context-colors {
    &.#{$color} {
      .input:focus + .label {
        @apply text-rui-#{$color};
      }

      .label {
        @apply after:border-rui-#{$color};
      }

      &.outlined:not(.disabled) .input:focus ~ .fieldset {
        @apply border-rui-#{$color};
      }
    }

    &.text_#{$color},
    &.with-#{$color} {
      .prepend,
      .append,
      .input {
        @apply text-rui-#{$color};
      }

      &:not(.disabled) .prepend svg,
      &:not(.disabled) .append svg {
        @apply text-rui-#{$color};
      }
    }
  }

  @each $color in 'error', 'success' {
    &.with-#{$color} {
      .input {
        @apply border-rui-#{$color} #{!important};
      }

      .label {
        @apply text-rui-#{$color} after:border-rui-#{$color} #{!important};
      }

      .fieldset {
        @apply border-rui-#{$color} #{!important};
      }
    }
  }

  &.dense {
    .input {
      @apply py-1;
    }

    .label {
      @apply leading-[3.5];
    }
  }

  &.filled,
  &.outlined {
    @apply pt-0;

    .prepend:not(:empty) {
      @apply pl-3 pr-0;
    }

    .append:not(:empty) {
      @apply pr-3 pl-0;
    }

    .input {
      @apply px-3;
    }

    .label {
      @apply leading-[3.5];
      --x-padding: 0.75rem;
    }
  }

  &.filled {
    .input {
      @apply py-4;

      &:focus + .label {
        @apply bg-black/[0.09];
      }

      &:not(:placeholder-shown),
      &:autofill,
      &:-webkit-autofill,
      &[data-has-value='true'],
      &:focus {
        + .label {
          @apply leading-[1.5] pl-4;
          padding-left: calc(var(--x-padding));
          padding-right: calc(var(--x-padding));
        }
      }
    }

    .label {
      @apply rounded-t bg-black/[0.06];
    }

    &.dense {
      .input {
        @apply pt-5 pb-1;
      }

      .label {
        @apply leading-[3];
      }

      &:not(:placeholder-shown),
      &:autofill,
      &:-webkit-autofill,
      &[data-has-value='true'],
      &:focus {
        + .label {
          @apply leading-[2.25];
        }
      }
    }

    &.no-label {
      .input {
        @apply py-4;
      }

      &.dense .input {
        @apply py-3;
      }
    }
  }

  &.outlined {
    .input {
      @apply py-4 border-b-0;

      &:not(:placeholder-shown),
      &:autofill,
      &:-webkit-autofill,
      &[data-has-value='true'],
      &:focus {
        @apply border-t-transparent;

        + .label {
          @apply leading-[0] pl-4 -mt-3;

          span {
            @apply pt-3;
          }
        }

        ~ .fieldset {
          legend {
            &.show {
              @apply px-2;
            }
          }
        }
      }
    }

    .fieldset {
      @apply absolute w-full min-w-0 h-[calc(100%+0.5rem)] top-0 left-0 pointer-events-none rounded border border-black/[0.23] px-2 transition-all -mt-2;

      legend {
        @apply opacity-0 text-xs max-w-full truncate;

        &:before {
          content: ' ';
        }

        &:after {
          @apply truncate max-w-full leading-[0];
          content: '\200B';
        }
      }
    }

    &:not(.disabled) .input {
      &:hover ~ .fieldset,
      &:focus ~ .fieldset {
        @apply border border-black;
      }

      &:focus ~ .fieldset {
        @apply border-2;
      }
    }

    .label {
      @apply border-0 border-transparent;

      &:after {
        content: none !important;
      }
    }

    &.dense {
      .input {
        @apply py-2;
      }

      .label {
        @apply leading-[2.5];
      }
    }
  }

  &.label-outside {
    @apply pt-0;

    .input {
      @apply py-2;
    }

    .label {
      @apply hidden;
    }

    &.filled,
    &.outlined {
      .input {
        @apply py-2;
      }
    }
  }
}

.outsideLabel {
  @apply block text-subtitle-1 font-[400] text-rui-text mb-1;
}

.details {
  @apply pt-1 px-3;

  &.detailsOutside {
    @apply px-0 text-caption text-rui-text-secondary;
  }
}

:global(.dark) {
  .wrapper {
    @apply bg-transparent;

    .label {
      @apply border-white/[0.42];

      &:after {
        @apply border-white;
      }
    }

    .icon {
      @apply text-white/[0.56];
    }

    &:hover .label {
      @apply border-white;
    }

    &.filled {
      .input:focus + .label {
        @apply bg-white/[0.13];
      }

      .label {
        @apply bg-white/[0.09];
      }
    }

    &.outlined {
      .fieldset {
        @apply border-white/[0.23];
      }

      &:not(.disabled) .input {
        &:hover ~ .fieldset,
        &:focus ~ .fieldset {
          @apply border-white;
        }
      }
    }
  }
}
